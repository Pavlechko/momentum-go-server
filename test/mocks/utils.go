// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\Serhii.Pavlechko\Documents\sigma\internship\projects\momentum-go-server\internal\utils\common.go
//
// Generated by this command:
//
//	mockgen.exe -source=C:\Users\Serhii.Pavlechko\Documents\sigma\internship\projects\momentum-go-server\internal\utils\common.go -destination=test/mocks/utils .go -package=mocks
//
// Package mock_utils is a generated GoMock package.
package mocks

import (
	models "momentum-go-server/internal/models"
	http "net/http"
	reflect "reflect"

	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockIUtils is a mock of IUtils interface.
type MockIUtils struct {
	ctrl     *gomock.Controller
	recorder *MockIUtilsMockRecorder
}

// MockIUtilsMockRecorder is the mock recorder for MockIUtils.
type MockIUtilsMockRecorder struct {
	mock *MockIUtils
}

// NewMockIUtils creates a new mock instance.
func NewMockIUtils(ctrl *gomock.Controller) *MockIUtils {
	mock := &MockIUtils{ctrl: ctrl}
	mock.recorder = &MockIUtilsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUtils) EXPECT() *MockIUtilsMockRecorder {
	return m.recorder
}

// GenerateJWT mocks base method.
func (m *MockIUtils) GenerateJWT(user *models.UserResponse) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateJWT", user)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateJWT indicates an expected call of GenerateJWT.
func (mr *MockIUtilsMockRecorder) GenerateJWT(user any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateJWT", reflect.TypeOf((*MockIUtils)(nil).GenerateJWT), user)
}

// GetDefaultSettings mocks base method.
func (m *MockIUtils) GetDefaultSettings(id uuid.UUID) []*models.Setting {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDefaultSettings", id)
	ret0, _ := ret[0].([]*models.Setting)
	return ret0
}

// GetDefaultSettings indicates an expected call of GetDefaultSettings.
func (mr *MockIUtilsMockRecorder) GetDefaultSettings(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDefaultSettings", reflect.TypeOf((*MockIUtils)(nil).GetDefaultSettings), id)
}

// GetUserID mocks base method.
func (m *MockIUtils) GetUserID(r *http.Request) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserID", r)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUserID indicates an expected call of GetUserID.
func (mr *MockIUtilsMockRecorder) GetUserID(r any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserID", reflect.TypeOf((*MockIUtils)(nil).GetUserID), r)
}
